{"version":3,"file":"component---src-pages-index-tsx-8ab08a2941cc10df58ce.js","mappings":"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","sources":["webpack://llm-engineering-magic/./src/components/InputField.tsx","webpack://llm-engineering-magic/./src/pages/PromptConstructorPage.tsx","webpack://llm-engineering-magic/./src/pages/index.tsx"],"sourcesContent":["import React, { ChangeEvent, FC } from 'react';\n\ninterface InputFieldProps {\n  label: string;\n  id: string;\n  value: string;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputField: FC<InputFieldProps> = ({ label, id, value, onChange }) => {\n  return (\n    <div>\n      <label htmlFor={id} className=\"block mb-2 font-bold text-yellow-700\">{label}:</label>\n      <input\n        className=\"w-full px-3 py-2 mb-4 border border-red-50 rounded bg-white text-gray-700\"\n        type=\"text\"\n        id={id}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputField;","import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\nimport InputField from '../components/InputField';\n\ninterface FormState {\n    role: string;\n    instruction: string;\n    detail: string;\n    outputFormat: string;\n}\n\nconst PromptConstructorPage = () => {\n    const [formState, setFormState] = useState<FormState>({\n        role: '',\n        instruction: '',\n        detail: '',\n        outputFormat: '',\n    });\n    const [copyState, setCopyState] = useState<boolean>(false)\n    const [copyXMLState, setCopyXMLState] = useState<boolean>(false)\n    const concatenatedText = `Role: ${formState.role}\\nInstruction: ${formState.instruction}\\nDetail: ${formState.detail}\\nOutput Format: ${formState.outputFormat}`;\n    const concatenatedTextXML = `<Role>${formState.role}</Role>\\n<Instruction>${formState.instruction}</Instruction>\\n<Detail>${formState.detail}</Detail>\\n<OutputFormat>${formState.outputFormat}</OutputFormat>`;\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\n        const { id, value } = e.target;\n        setFormState((prevState) => ({ ...prevState, [id]: value }));\n        setCopyState(false)\n        setCopyXMLState(false)\n    };\n    const copyToClipboard = () => {\n        try {\n            navigator.clipboard.writeText(concatenatedText)\n            setCopyState(true)\n        }\n        catch (error) {\n            console.log(error)\n        }\n    };\n    const copyXMLToClipboard = () => {\n        try {\n            navigator.clipboard.writeText(concatenatedTextXML)\n            setCopyXMLState(true)\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n\n    }\n    return (<>\n        <div className=\"overflow-auto w-full h-screen flex flex-col justify-between p-5 bg-orange-100 rounded-lg shadow-md items-start md:flex-row\">\n            <div className=\"w-full mb-5 md:w-1/2 md:m-5\">\n                <InputField\n                    label=\"Role\"\n                    id=\"role\"\n                    value={formState.role}\n                    onChange={handleChange}\n                />\n                <InputField\n                    label=\"Instruction\"\n                    id=\"instruction\"\n                    value={formState.instruction}\n                    onChange={handleChange}\n                />\n                <InputField\n                    label=\"Detail\"\n                    id=\"detail\"\n                    value={formState.detail}\n                    onChange={handleChange}\n                />\n                <InputField\n                    label=\"Output Format\"\n                    id=\"outputFormat\"\n                    value={formState.outputFormat}\n                    onChange={handleChange}\n                />\n            </div>\n\n            <div className=\"w-full h-full md:w-1/2 text-wrap\">\n                <h3 className=\"w-full block font-bold text-yellow-700\">Concatenated Text:</h3>\n                <pre className=\"mt-1 p-4 bg-gray-200 border border-gray-300 rounded text-brown-700 text-wrap\">{concatenatedText}</pre>\n                <div className=\"flex flex-row\">\n                    <button className=\"block mt-4 p-2 px-4 bg-[#e5d2c3] text-[#6d5d52] rounded-md cursor-pointer transition-colors duration-300\" onClick={copyToClipboard}>Copy to Clipboard</button>\n                    {copyState ? <label className=\"block ml-4 mt-4 p-2 px-4 text-yellow-700\">Copied to Clipboard</label> : <></>}\n                </div>\n\n\n                <h3 className=\"w-full block mt-10 font-bold text-yellow-700\">Concatenated Text (XML):</h3>\n                <pre className=\"mt-1 p-4 bg-gray-200 border border-gray-300 rounded text-brown-700 text-wrap\">{concatenatedTextXML}</pre>\n                <div className=\"flex flex-row mb-8\">\n                    <button className=\"block mt-4 p-2 px-4 bg-[#e5d2c3] text-[#6d5d52] rounded-md cursor-pointer transition-colors duration-300\" onClick={copyXMLToClipboard}>Copy XML to Clipboard</button>\n                    {copyXMLState ? <label className=\"block ml-4 mt-4 p-2 px-4 text-yellow-700\">Copied XML to Clipboard</label> : <></>}\n                </div>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default PromptConstructorPage\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport PromptConstructorPage from \"./PromptConstructorPage\"\nimport Navbar from \"../components/NavBarOne\";\n\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const links = [\n    { label: 'Home', href: '/' },\n    { label: 'About', href: '/about' },\n    { label: 'Services', href: '/services' },\n    { label: 'Contact', href: '/contact' },\n  ];\n  return (\n    <main className=\"h-screen h-text-gray-900 font-sans\">\n      {/* <Navbar brandName=\"Neon Navbar\" links={links} /> */}\n      <PromptConstructorPage/>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["_ref","label","id","value","onChange","React","htmlFor","className","type","formState","setFormState","useState","role","instruction","detail","outputFormat","copyState","setCopyState","copyXMLState","setCopyXMLState","concatenatedText","concatenatedTextXML","handleChange","e","target","prevState","InputField","onClick","navigator","clipboard","writeText","error","console","log","PromptConstructorPage","Head"],"sourceRoot":""}