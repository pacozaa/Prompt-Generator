{"version":3,"file":"component---src-pages-index-tsx-1e774226edf250c25914.js","mappings":"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","sources":["webpack://llm-engineering-magic/./src/styles/styles.ts","webpack://llm-engineering-magic/./src/components/InputField.tsx","webpack://llm-engineering-magic/./src/pages/PromptConstructorPage.tsx","webpack://llm-engineering-magic/./src/pages/index.tsx"],"sourcesContent":["export const styles = {\n    container: {\n        maxWidth: '100%',\n        margin: '0 auto',\n        padding: '20px',\n        backgroundColor: '#f3e9e1',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    label: {\n        display: 'block',\n        marginBottom: '8px',\n        fontWeight: 'bold',\n        color: '#8c7a6d'\n    },\n    input: {\n        width: '100%',\n        padding: '8px 12px',\n        marginBottom: '16px',\n        border: '1px solid #d9c9b8',\n        borderRadius: '4px',\n        backgroundColor: '#fff',\n        color: '#4d4d4d'\n    },\n    output: {\n        marginTop: '24px',\n        padding: '16px',\n        backgroundColor: '#f7f1eb',\n        border: '1px solid #e7d9ca',\n        borderRadius: '4px',\n        color: '#6d5d52',\n    },\n    button: {\n        display: 'block',\n        marginTop: '16px',\n        padding: '8px 16px',\n        backgroundColor: '#e5d2c3',\n        color: '#6d5d52',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        transition: 'backgroundColor 0.3s ease'\n    },\n    buttonHover: {\n        backgroundColor: '#d9c9b8'\n    }\n}","import React, { ChangeEvent, FC } from 'react';\nimport { styles } from '../styles/styles';\n\ninterface InputFieldProps {\n  label: string;\n  id: string;\n  value: string;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputField: FC<InputFieldProps> = ({ label, id, value, onChange }) => {\n  return (\n    <div>\n      <label htmlFor={id} style={styles.label}>{label}:</label>\n      <input\n      style={styles.input}\n        type=\"text\"\n        id={id}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputField;","import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\nimport InputField from '../components/InputField';\nimport { styles } from '../styles/styles';\n\nconst PromptConstructorPage = () => {\n    const [role, setRole] = useState('');\n    const [instruction, setInstruction] = useState('');\n    const [detail, setDetail] = useState('');\n    const [outputFormat, setOutputFormat] = useState('');\n\n    const concatenatedText = `Role: ${role}\\nInstruction: ${instruction}\\nDetail: ${detail}\\nOutput Format: ${outputFormat}`;\n\n    const handleInstructionChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setInstruction(e.target.value);\n    };\n\n    const handleDetailChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setDetail(e.target.value);\n    };\n\n    const handleOutputFormatChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setOutputFormat(e.target.value);\n    };\n    const handleRoleChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setRole(e.target.value);\n    };\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(concatenatedText)\n            .then(() => {\n                alert('Text copied to clipboard!');\n            })\n            .catch((err) => {\n                console.error('Failed to copy text: ', err);\n            });\n    };\n    return (<>\n        <div className=\"w-full flex flex-row justify-between p-5 bg-orange-100 rounded-lg shadow-md items-start\">\n            <div className=\"w-full m-5\">\n                <InputField\n                    label=\"Role\"\n                    id=\"role\"\n                    value={role}\n                    onChange={handleRoleChange}\n                />\n                <InputField\n                    label=\"Instruction\"\n                    id=\"instruction\"\n                    value={instruction}\n                    onChange={handleInstructionChange}\n                />\n                <InputField\n                    label=\"Detail\"\n                    id=\"detail\"\n                    value={detail}\n                    onChange={handleDetailChange}\n                />\n                <InputField\n                    label=\"Output Format\"\n                    id=\"outputFormat\"\n                    value={outputFormat}\n                    onChange={handleOutputFormatChange}\n                />\n            </div>\n\n            <div className=\"w-full\">\n                <h3 style={styles.label}>Concatenated Text:</h3>\n                <pre style={styles.output}>{concatenatedText}</pre>\n                <button style={styles.button} onClick={copyToClipboard}>Copy to Clipboard</button>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default PromptConstructorPage\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport PromptConstructorPage from \"./PromptConstructorPage\"\n\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\nconst headingAccentStyles = {\n  color: \"#663399\",\n}\nconst paragraphStyles = {\n  marginBottom: 48,\n}\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n}\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n}\nconst listItemStyles = {\n  fontWeight: 300,\n  fontSize: 24,\n  maxWidth: 560,\n  marginBottom: 30,\n}\n\nconst linkStyle = {\n  color: \"#8954A8\",\n  fontWeight: \"bold\",\n  fontSize: 16,\n  verticalAlign: \"5%\",\n}\n\nconst docLinkStyle = {\n  ...linkStyle,\n  listStyleType: \"none\",\n  display: `inline-block`,\n  marginBottom: 24,\n  marginRight: 12,\n}\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n}\n\nconst badgeStyle = {\n  color: \"#fff\",\n  backgroundColor: \"#088413\",\n  border: \"1px solid #088413\",\n  fontSize: 11,\n  fontWeight: \"bold\",\n  letterSpacing: 1,\n  borderRadius: 4,\n  padding: \"4px 6px\",\n  display: \"inline-block\",\n  position: \"relative\" as \"relative\",\n  top: -2,\n  marginLeft: 10,\n  lineHeight: 1,\n}\n\nconst links = [\n  {\n    text: \"Tutorial\",\n    url: \"https://www.gatsbyjs.com/docs/tutorial/getting-started/\",\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n    color: \"#E95800\",\n  },\n  {\n    text: \"PromptConstruct Page\",\n    url: \"PromptConstructorPage\",\n    badge: false,\n    description:\n      \"A PromptConstruct Page\",\n  },\n]\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <main style={pageStyles}>\n      <PromptConstructorPage/>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["styles","container","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","display","flexDirection","alignItems","label","marginBottom","fontWeight","color","input","width","border","output","marginTop","button","cursor","transition","buttonHover","_ref","id","value","onChange","React","htmlFor","style","type","role","setRole","useState","instruction","setInstruction","detail","setDetail","outputFormat","setOutputFormat","concatenatedText","className","InputField","e","target","onClick","navigator","clipboard","writeText","then","alert","catch","err","console","error","pageStyles","fontFamily","PromptConstructorPage","Head"],"sourceRoot":""}